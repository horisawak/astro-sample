---
import BaseLayout from '../../layouts/BaseLayout.astro';

// microCMSのAPI
import { getBlogs } from "../../library/microcms";
import { getCategories } from "../../library/microcms";
// microCMSの情報の型
import type { Blog } from "../../library/microcms";
import type { Category } from "../../library/microcms";

// カテゴリ一覧 (microCMSのカテゴリ情報で生成)
export async function getStaticPaths() {
  // microCMSからカテゴリ一覧を取得
  const allCategory = await getCategories({ fields: ["id", "name"] });
  // IDのみ取り出す
  return allCategory.contents.map((content: Category) => {
    return {
      params: { categoryId: content.id },
      props: { categoryName: content.name },
    };
  });
}
// カテゴリIDを設定
const { categoryId } = Astro.params;
const { categoryName } = Astro.props;
const pageTitle = categoryName + "の記事一覧";

// 表示されているカテゴリのブログ記事のみを取得
const response = await getBlogs({
  filters: "category[equals]" + categoryId,
  fields: ["id", "title", "createdAt", "eyecatch", "category"]
});

// ベースURL取得
const baseUrl = import.meta.env.BASE_URL;
---

<BaseLayout pageTitle={pageTitle}>
  <main>
    <div class="wrapper">
      {
        response.contents.map((content: Blog) => (
          <a href={`${baseUrl}blog-cms/${content.id}`}>
            <div class="content">
              <div>
                <img src={content.eyecatch.url} />
              </div>
              <div>
                <p>{content.title}</p>
                <div class="date">{content.createdAt}</div>
                <div class="category">{content.category.name}</div>
              </div>
            </div>
          </a>
        ))
      }
    </div>
  </main>
</BaseLayout>

<style>
  main {
    margin: auto;
    padding: 1em;
  }
  div.wrapper {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    grid-gap: 16px;
    margin-top: 2rem;
    padding-left: 0;
  }
  div.content {
    padding: 0.5rem 1rem;
    list-style:none;
    background-color: #ffffff;
    text-decoration: none;
    height: 100%;
  }
  div.wrapper a {
    display: block;
    color: #333;
    text-decoration: none;
    transition: 0.3s;
    width: 100%;
  }
  div.wrapper a:hover {
    filter:drop-shadow(3px 3px 2px rgba(0, 0, 0, 0.2));
    color: #399;
  }
  div.content img {
    max-width: 100%;
  }
  .category {
    color: #333333;
    display: inline-flex;
    margin: 0.25em;
    border: dotted 1px #a1a1a1;
    border-radius: .5em;
    padding: .5em 1em;
    font-size: 0.8em;
    background-color: #F8FCFD;
  }
  .date {
    color: #333333;
    display: inline-flex;
    margin: 0.25em;
    font-size: 0.8em;
  }
</style>
